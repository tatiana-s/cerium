typedef ID = signed<32>
typedef Type = OkType
             | ErrorType
             | VoidType 
             | IntType 
             | FloatType 
             | CharType
             | FunType

// Direct mapping to AST relations defined in framework.
input relation TransUnit(id: ID, body_ids: Vec<ID>)
input relation FunDef(id: ID, fun_name: string, return_id: ID, arg_ids: Vec<ID>)
input relation FunCall(id: ID, fun_name: string, arg_ids: Vec<ID>)
input relation Compound(body_ids: Vec<ID>)
input relation Assign(id: ID, var_name: string, expr_id: ID)
input relation Return(id: ID, expr_id: ID)
input relation BinaryOp(id: ID, arg1_id: ID, ar2_id: ID)
input relation Var(id: ID, var_name: string)
input relation Void(id: ID)
input relation Int(id: ID)
input relation Float(id: ID)
input relation Char(id: ID)

// Main output relation.
output relation OkProgram(id: ID)
// Secondary output relations.
output relation TypedTransUnit(id: ID, t: Type)

// Typing rules.
OkProgram(id) :-
    TypedTransUnit(id, OkType).
